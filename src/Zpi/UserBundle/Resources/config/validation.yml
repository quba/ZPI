Zpi\UserBundle\Entity\User:
    constraints:
      - FOS\UserBundle\Validator\Unique: {property: "emailCanonical", message: "The email is already used", groups: [registration, profile] }
# usernameCanonical nie portujemy - wlasnie po to zeby to wywalic byl ten port ;)

    properties:
        email:
            - NotBlank: { message: "Please enter an email", groups: [registration, profile] }
            - MinLength: { limit: 2, message: "The email should be longer than {{ limit }} characters", groups: [registration, profile] }
            - MaxLength: { limit: 255, message: "The email should not be longer than {{ limit }} characters", groups: [registration, profile] }
            - Email: { message: "The email is not valid", checkMX: true, groups: [registration, profile] }
# dodalem sprawdzanie rekordow MX dla domeny e-maila. Fajna funkcja, tylko przeladowanie logowania trwa pol sekundy dluzej.
        plainPassword:
            - NotBlank: { message: "Please enter a password", groups: [registration] }
            - MinLength: { limit: 5, message: "The password should be longer than {{ limit }} chars", groups: [registration, profile] }
        institution:
            - NotBlank: {message: "Please enter yours institution name", groups: [registration, profile] }
            - MinLength: { limit: 5, message: "Please enter full name of insitution", groups: [registration, profile] }
            - MaxLength: { limit: 60, message: "Institution name must have max {{ limit }} characters.", groups: [registration, profile] }
        name:
            - MinLength: {limit: 2, message: "Name should contain at least {{ limit }} characters.", groups: [registration, profile] }
            - NotBlank: {message: "Please enter your name", groups: [registration, profile] }
            - Regex: {pattern: "/\d/",match: false, message: "Your name cannot contain a numbers", groups: [registration, profile] }
        surname:
            - MinLength: {limit: 2, message: "Surname should contain at least {{ limit }} characters.", groups: [registration, profile] }
            - NotBlank: {message: "Please enter your surname", groups: [registration, profile] }
            - Regex: { pattern: "/\d/",match: false, message: "Your surname cannot contain a numbers", groups: [registration, profile] }

        address:
            - MinLength: {limit: 3, message: "Address should contain at least {{ limit }} characters.", groups: [registration, profile] }
            - NotBlank: {message: "Please enter your address", groups: [registration, profile] }
            - Regex: { pattern: "(^((\w+)(\-)?|(\.)?)+((\w+)((\s)+|((\.)(\s)*)))(\d+))", message: "Enter your streat name and house number, for example: Piastowska 20/1 or Piastowska 20", groups: [registration, profile] }
        city:
            - MinLength: {limit: 3, message: "City name should contain at least {{ limit }} characters.", groups: [registration, profile] }
            - NotBlank: {message: "Please enter your city", groups: [registration, profile] }
            - Regex: { pattern: "/\d/",match: false, message: "City name cannot contain a numbers", groups: [registration, profile] }

        postalcode:
            - MinLength: {limit: 5, message: "Postal code should contain at least {{ limit }} characters.", groups: [registration, profile] }
            - NotBlank: {message: "Please enter your postal code", groups: [registration, profile] }
#           - Regex: { pattern: "[0-9]{2}-?[0-9]{3}", message: "Wprowadź kod w formacie: XX-XXX", groups: [registration, profile] }
#           Ograniczenie tylko dla polskich kodów
        country:
            - MinLength: {limit: 3, message: "Country name should contain at least {{ limit }} characters.", groups: [registration, profile] }
            - NotBlank: {message: "Please enter your country", groups: [registration, profile] }
            - Regex: { pattern: "/\d/",match: false, message: "Country name cannot contain a numbers", groups: [registration, profile] }

        phone:
            - MinLength: {limit: 7, message: "Phone number should contain at least {{ limit }} characters.", groups: [registration, profile] }
            - NotBlank: {message: "Please enter your phone number", groups: [registration, profile] }
            - Regex: { pattern: "/[+][0-9]{5,12}/", message: "Your phone numbes should constain area code, for examle +48XXXXXXXX", groups: [registration, profile] }


FOS\UserBundle\Form\Model\CheckPassword:
    constraints:
      - FOS\UserBundle\Validator\Password: {passwordProperty: "current", userProperty: "user", groups: [profile] }