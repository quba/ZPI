{% extends '::base.html.twig' %}
{% block js %}
<script type="text/javascript" src="{{ asset('jquery-1.6.3.js') }}"></script> 
<script type="text/javascript">
    /*
     * Obsługa dodawania oraz usuwania autorów
     * author: @quba
     */
    
    jQuery.expr[':'].regex = function(elem, index, match) {
        var matchParams = match[3].split(','),
            validLabels = /^(data|css):/,
            attr = {
                method: matchParams[0].match(validLabels) ? 
                            matchParams[0].split(':')[0] : 'attr',
                property: matchParams.shift().replace(validLabels,'')
            },
            regexFlags = 'ig',
            regex = new RegExp(matchParams.join('').replace(/^\s+|\s+$/g,''), regexFlags);
        return regex.test(jQuery(elem)[attr.method](attr.property));
    }
    
    var authorCount = '{{ form.authors | length }}';
    var authorExistingCount = '{{ form.authorsExisting | length }}';
    $delete_trigger = $("<button />")
                                .text('Delete author')
                                .click(function(event) {
                                    $(this).parent().remove();
                                    return false;
                                });
                                
    $(document).ready(function() {
        $('#add-another-author').click(function() {
            var authorList = $('#author-fields-list');
            var newWidget = authorList.attr('data-prototype');

            newWidget = newWidget.replace(/\$\$name\$\$/g, authorCount);
            authorCount++;
            
            var newLi = $('<li></li>').html(newWidget).append($delete_trigger.clone(true));
            newLi.appendTo($('#author-fields-list'));

            return false;
        });
    
        $('#add-another-authorExisting').click(function() {
            var authorExistingList = $('#authorExisting-fields-list');
            var newWidget = authorExistingList.attr('data-prototype');

            newWidget = newWidget.replace(/\$\$name\$\$/g, authorExistingCount);
            authorExistingCount++;

            var newLi = $('<li></li>').html(newWidget).append($delete_trigger.clone(true));
            newLi.appendTo($('#authorExisting-fields-list'));

            return false;
        });

        $(document).delegate('input:regex(id,(new_paper_authorsExisting_)(\\d+)(_email))', 'blur', function() {
            self = $(this);
            $.ajax({
                  type: "POST",
                  data: 'email='+$(this).val(),
                  url: '{{ path('emailvalexist') }}',
                }).done(function( data ) {
                 $('span#' + self.attr('id')).remove();
                 self.parent('div').append('<span id="' + self.attr('id') + '">' + data.reply + '</span>');
                 /* przyjmijmy ze nie ma sensu tego tutaj programowac, bo za duzo warunkow. Jak klient mimo informacji
                  * o złym wypełnieniu przejdzie dalej, to jego sprawa - i tak dostanie komunikat błędu.
                 if(data.reply != 'OK!')
                     $('#submit').attr('disabled', 'disabled');
                 else
                     $('#submit').removeAttr('disabled');
                  */
                });
                 
                return false;
            });
        $(document).delegate('input:regex(id,(new_paper_authors_)(\\d+)(_email))', 'blur', function() {
            self = $(this);
            $.ajax({
                  type: "POST",
                  data: 'email='+$(this).val(),
                  url: '{{ path('emailvalnonexist') }}',
                }).done(function( data ) {
                 $('span#' + self.attr('id')).remove();
                 self.parent('div').append('<span id="' + self.attr('id') + '">' + data.reply + '</span>');
                 /* przyjmijmy ze nie ma sensu tego tutaj programowac, bo za duzo warunkow. Jak klient mimo informacji
                  * o złym wypełnieniu przejdzie dalej, to jego sprawa - i tak dostanie komunikat błędu.
                 if(data.reply != 'OK!')
                     $('#submit').attr('disabled', 'disabled');
                 else
                     $('#submit').removeAttr('disabled');
                  */
                });
                 
                return false;
            });
    });
    

</script>
{% endblock %}
{% block title %}Paper registration{% endblock %}
{% block bodytitle %}Paper registration{% endblock %}
{% block body %}
<form action="{{ path('paper_new') }}" method="post" {{ form_enctype(form) }}>
        {{ form_errors(form) }}
        {{ form_row(form.title) }}
        {{ form_row(form.abstract) }}

        <h1>{%trans%}add.author.by.name{%endtrans%}</h1>
        <ul id="author-fields-list" data-prototype="{{ form_widget(form.authors.get('prototype')) | e }}">
        {% for author in form.authors %}
            <li>
                {{ form_errors(author) }}
                {{ form_widget(author) }}
                <br />
                <button id="delete-author">Delete author</button>
            </li>
        {% endfor %}
        </ul>

        <button id="add-another-author">Add another author</button>

        <h1>{%trans%}add.author.by.email{%endtrans%}</h1>
        <ul id="authorExisting-fields-list" data-prototype="{{ form_widget(form.authorsExisting.get('prototype')) | e }}">
        {% for authorExisting in form.authorsExisting %}
            <li>
                {{ form_errors(authorExisting) }}
                {{ form_widget(authorExisting) }}
                <br />
                <button id="delete-author-existing">Delete author</button>
            </li>
        {% endfor %}
        </ul>

        <button id="add-another-authorExisting">Add another author</button>
        <br /><br />
        {{ form_widget(form._token) }}
        {# Pomijamy form_rest, bo generował tylko zbędne label-ki. #}
	<input id="submit" type="submit" value="{%trans%}paper.add{%endtrans%}" />
</form>
<br />
{# debug | raw #}

{% endblock %}


